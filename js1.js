var e = "undefined" != typeof globalThis && globalThis || "undefined" != typeof self && self || void 0 !== e && e, t = "URLSearchParams" in e, r = "Symbol" in e && "iterator" in Symbol, o = "FileReader" in e && "Blob" in e && function () { try { return new Blob, !0 } catch (e) { return !1 } }(), n = "FormData" in e, s = "ArrayBuffer" in e; if (s) var i = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], a = ArrayBuffer.isView || function (e) { return e && i.indexOf(Object.prototype.toString.call(e)) > -1 }; function c(e) { if ("string" != typeof e && (e = String(e)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e) || "" === e) throw new TypeError('Invalid character in header field name: "' + e + '"'); return e.toLowerCase() } function d(e) { return "string" != typeof e && (e = String(e)), e } function h(e) { var t = { next: function () { var t = e.shift(); return { done: void 0 === t, value: t } } }; return r && (t[Symbol.iterator] = function () { return t }), t } function u(e) { this.map = {}, e instanceof u ? e.forEach((function (e, t) { this.append(t, e) }), this) : Array.isArray(e) ? e.forEach((function (e) { this.append(e[0], e[1]) }), this) : e && Object.getOwnPropertyNames(e).forEach((function (t) { this.append(t, e[t]) }), this) } function f(e) { if (e.bodyUsed) return Promise.reject(new TypeError("Already read")); e.bodyUsed = !0 } function l(e) { return new Promise((function (t, r) { e.onload = function () { t(e.result) }, e.onerror = function () { r(e.error) } })) } function p(e) { var t = new FileReader, r = l(t); return t.readAsArrayBuffer(e), r } function y(e) { if (e.slice) return e.slice(0); var t = new Uint8Array(e.byteLength); return t.set(new Uint8Array(e)), t.buffer } function m() { return this.bodyUsed = !1, this._initBody = function (e) { var r; this.bodyUsed = this.bodyUsed, this._bodyInit = e, e ? "string" == typeof e ? this._bodyText = e : o && Blob.prototype.isPrototypeOf(e) ? this._bodyBlob = e : n && FormData.prototype.isPrototypeOf(e) ? this._bodyFormData = e : t && URLSearchParams.prototype.isPrototypeOf(e) ? this._bodyText = e.toString() : s && o && ((r = e) && DataView.prototype.isPrototypeOf(r)) ? (this._bodyArrayBuffer = y(e.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : s && (ArrayBuffer.prototype.isPrototypeOf(e) || a(e)) ? this._bodyArrayBuffer = y(e) : this._bodyText = e = Object.prototype.toString.call(e) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof e ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8")) }, o && (this.blob = function () { var e = f(this); if (e) return e; if (this._bodyBlob) return Promise.resolve(this._bodyBlob); if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer])); if (this._bodyFormData) throw new Error("could not read FormData body as blob"); return Promise.resolve(new Blob([this._bodyText])) }, this.arrayBuffer = function () { if (this._bodyArrayBuffer) { var e = f(this); return e || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer)) } return this.blob().then(p) }), this.text = function () { var e, t, r, o = f(this); if (o) return o; if (this._bodyBlob) return e = this._bodyBlob, t = new FileReader, r = l(t), t.readAsText(e), r; if (this._bodyArrayBuffer) return Promise.resolve(function (e) { for (var t = new Uint8Array(e), r = new Array(t.length), o = 0; o < t.length; o++)r[o] = String.fromCharCode(t[o]); return r.join("") }(this._bodyArrayBuffer)); if (this._bodyFormData) throw new Error("could not read FormData body as text"); return Promise.resolve(this._bodyText) }, n && (this.formData = function () { return this.text().then(w) }), this.json = function () { return this.text().then(JSON.parse) }, this } u.prototype.append = function (e, t) { e = c(e), t = d(t); var r = this.map[e]; this.map[e] = r ? r + ", " + t : t }, u.prototype.delete = function (e) { delete this.map[c(e)] }, u.prototype.get = function (e) { return e = c(e), this.has(e) ? this.map[e] : null }, u.prototype.has = function (e) { return this.map.hasOwnProperty(c(e)) }, u.prototype.set = function (e, t) { this.map[c(e)] = d(t) }, u.prototype.forEach = function (e, t) { for (var r in this.map) this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this) }, u.prototype.keys = function () { var e = []; return this.forEach((function (t, r) { e.push(r) })), h(e) }, u.prototype.values = function () { var e = []; return this.forEach((function (t) { e.push(t) })), h(e) }, u.prototype.entries = function () { var e = []; return this.forEach((function (t, r) { e.push([r, t]) })), h(e) }, r && (u.prototype[Symbol.iterator] = u.prototype.entries); var b = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"]; function g(e, t) { if (!(this instanceof g)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.'); var r, o, n = (t = t || {}).body; if (e instanceof g) { if (e.bodyUsed) throw new TypeError("Already read"); this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new u(e.headers)), this.method = e.method, this.mode = e.mode, this.signal = e.signal, n || null == e._bodyInit || (n = e._bodyInit, e.bodyUsed = !0) } else this.url = String(e); if (this.credentials = t.credentials || this.credentials || "same-origin", !t.headers && this.headers || (this.headers = new u(t.headers)), this.method = (r = t.method || this.method || "GET", o = r.toUpperCase(), b.indexOf(o) > -1 ? o : r), this.mode = t.mode || this.mode || null, this.signal = t.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && n) throw new TypeError("Body not allowed for GET or HEAD requests"); if (this._initBody(n), !("GET" !== this.method && "HEAD" !== this.method || "no-store" !== t.cache && "no-cache" !== t.cache)) { var s = /([?&])_=[^&]*/; if (s.test(this.url)) this.url = this.url.replace(s, "$1_=" + (new Date).getTime()); else { this.url += (/\?/.test(this.url) ? "&" : "?") + "_=" + (new Date).getTime() } } } function w(e) { var t = new FormData; return e.trim().split("&").forEach((function (e) { if (e) { var r = e.split("="), o = r.shift().replace(/\+/g, " "), n = r.join("=").replace(/\+/g, " "); t.append(decodeURIComponent(o), decodeURIComponent(n)) } })), t } function T(e, t) { if (!(this instanceof T)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.'); t || (t = {}), this.type = "default", this.status = void 0 === t.status ? 200 : t.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = void 0 === t.statusText ? "" : "" + t.statusText, this.headers = new u(t.headers), this.url = t.url || "", this._initBody(e) } g.prototype.clone = function () { return new g(this, { body: this._bodyInit }) }, m.call(g.prototype), m.call(T.prototype), T.prototype.clone = function () { return new T(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new u(this.headers), url: this.url }) }, T.error = function () { var e = new T(null, { status: 0, statusText: "" }); return e.type = "error", e }; var v = [301, 302, 303, 307, 308]; T.redirect = function (e, t) { if (-1 === v.indexOf(t)) throw new RangeError("Invalid status code"); return new T(null, { status: t, headers: { location: e } }) }; var E = e.DOMException; try { new E } catch (e) { (E = function (e, t) { this.message = e, this.name = t; var r = Error(e); this.stack = r.stack }).prototype = Object.create(Error.prototype), E.prototype.constructor = E } function S(t, r) { return new Promise((function (n, i) { var a = new g(t, r); if (a.signal && a.signal.aborted) return i(new E("Aborted", "AbortError")); var c = new XMLHttpRequest; function h() { c.abort() } c.onload = function () { var e, t, r = { status: c.status, statusText: c.statusText, headers: (e = c.getAllResponseHeaders() || "", t = new u, e.replace(/\r?\n[\t ]+/g, " ").split("\r").map((function (e) { return 0 === e.indexOf("\n") ? e.substr(1, e.length) : e })).forEach((function (e) { var r = e.split(":"), o = r.shift().trim(); if (o) { var n = r.join(":").trim(); t.append(o, n) } })), t) }; r.url = "responseURL" in c ? c.responseURL : r.headers.get("X-Request-URL"); var o = "response" in c ? c.response : c.responseText; setTimeout((function () { n(new T(o, r)) }), 0) }, c.onerror = function () { setTimeout((function () { i(new TypeError("Network request failed")) }), 0) }, c.ontimeout = function () { setTimeout((function () { i(new TypeError("Network request failed")) }), 0) }, c.onabort = function () { setTimeout((function () { i(new E("Aborted", "AbortError")) }), 0) }, c.open(a.method, function (t) { try { return "" === t && e.location.href ? e.location.href : t } catch (e) { return t } }(a.url), !0), "include" === a.credentials ? c.withCredentials = !0 : "omit" === a.credentials && (c.withCredentials = !1), "responseType" in c && (o ? c.responseType = "blob" : s && a.headers.get("Content-Type") && -1 !== a.headers.get("Content-Type").indexOf("application/octet-stream") && (c.responseType = "arraybuffer")), !r || "object" != typeof r.headers || r.headers instanceof u ? a.headers.forEach((function (e, t) { c.setRequestHeader(t, e) })) : Object.getOwnPropertyNames(r.headers).forEach((function (e) { c.setRequestHeader(e, d(r.headers[e])) })), a.signal && (a.signal.addEventListener("abort", h), c.onreadystatechange = function () { 4 === c.readyState && a.signal.removeEventListener("abort", h) }), c.send(void 0 === a._bodyInit ? null : a._bodyInit) })) } S.polyfill = !0, e.fetch || (e.fetch = S, e.Headers = u, e.Request = g, e.Response = T), self.fetch.bind(self); let _ = document.getElementsByTagName("BODY")[0]; if (_) { var A = document.createElement("span"); A.width = 0, A.height = 0, A.style.setProperty("display", "none", "important"), _.appendChild(A) } const B = document.getElementById("term"), x = e => { B && (e = "object" == typeof e ? `<p class="fix">${JSON.stringify(e, null, 4)}</p>` : `<p><span class="clock">${(new Date).toISOString()}</span><span class="msg">${e}<span></p>`, B.innerHTML += e) }, O = () => Math.floor(1e8 * Math.random()) + 1, P = async e => new Promise(((t, r) => { var o = !1; let n = `${e}${-1 !== e.indexOf("?") ? "&" : "?"}r=${O()}`; if (A) { var s = document.createElement("img"); s.width = 0, s.height = 0, s.hidden = !0, s.style.setProperty("display", "none", "important"), s.referrerPolicy = "no-referrer", s.onload = () => { o = !0, t({ asset: n, extra: { failure: !1 } }) }, s.setAttribute("src", n), A.appendChild(s) } setTimeout((() => { o || t({ asset: n, extra: { failure: !0 } }) }), 2e3) })), j = async e => new Promise(((t, r) => { var o = !1; let n = `${e}${-1 !== e.indexOf("?") ? "&" : "?"}r=${O()}`; fetch(n).then((e => e.json())).then((e => { o = !0, t({ asset: n, extra: { failure: !1 } }) })), setTimeout((() => { o || t({ asset: n, extra: { failure: !0 } }) }), 2e3) })), R = async e => new Promise(((t, r) => { var o = !1; let n = `${e}${-1 !== e.indexOf("?") ? "&" : "?"}r=${O()}`; fetch(n).then((e => e.json())).then((e => { o = !0, t({ asset: n, extra: { responseRegion: e.colo, failure: !1 } }) })), setTimeout((() => { o || t({ asset: n, extra: { failure: !0 } }) }), 2e3) })), U = () => Math.floor(Date.now() / 1e3), D = e => e.match(/h1|http\/1/) ? "http/1.x" : e.match(/h2|http\/2/) ? "http/2" : !!e.match(/h3|http\/3/) && "http/3", I = async e => { if (!1 === (() => { if ("127.0.0.1" === location.hostname) return !0; if (void 0 !== window.webdriver) return !1; if ("https:" !== location.protocol) return !1; if (void 0 === performance) return !1; if ("function" != typeof performance.clearResourceTimings) return !1; if ("undefined" == typeof sessionStorage) return !1; var e = sessionStorage.getItem("ts"); return !(e && parseInt(e) + 60 > U()) })()) return void x("No measurements to do."); x(`Taking ${e.reduce(((e, t) => e + t.assets.length), 0)} measurements...`); let t = 0; const r = document.querySelector("#cf-error-details h1"); if (r) { const e = r.innerText.match(/Error\s+(\d+)/i); e && (t = parseInt(e[1])) } if (-1 !== [1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1020, 1106].indexOf(t)) return; performance.clearResourceTimings(); let o = []; for (var n in e) { let t, r = e[n]; switch (r.type) { case "coloName": t = R; break; case "api": t = j; break; default: t = P }let i = r.assets; for (var s in i) await t(`${r.prefix}${i[s].url}`, i[s].fetch).then((e => { let t, n = e.asset, a = { targetEntity: i[s].targetName, preWarmedRequest: !1, transferSize: i[s].es || r.es, asset: n, ...i[s].extra, ...e.extra }; const c = i[s].fetch ? "fetch" : "img", d = `<a href='${i[s].url}'>${i[s].targetName}</a>`; e.extra && !0 === e.extra.failure ? (a.transferSize = 0, t = `<span style='color:red'>Failed to measure ${d} from ${r.name} (${c})</span>`) : t = `Measured ${d} from ${r.name} (${c})`, a.targetObjectHash = i[s].digest, a.targetObjectHash || (a.targetObjectHash = "0000000000000000000000000000000000000000000000000000000000000000"), x(t), e.extra && !0 === e.extra.failure && !1 === r.canFail || o.push(a) })).catch((e => { x(e) })) } const i = performance.getEntriesByType("resource"); let a = []; if (i) for (var c in o) { let e = o[c], t = i[i.map((e => e.name)).indexOf(e.asset)]; if (t && performance.timeOrigin || !0 === e.failure) { if (delete e.asset, e.instanceTimeMs = Math.trunc(performance.timeOrigin), !0 === e.failure) e = { ...e, instanceTimeMs: 0, preWarmedRequest: !1, responseRegion: "", domainLookupStart: 0, domainLookupEnd: 0, connectStart: 0, connectEnd: 0, connectSecureStart: 0, responseStart: 0, requestStart: 0, responseEnd: 0, transferSize: 0, encodedBodySize: 0, decodedBodySize: 0, serverTimeMs: 0, connectProtocol: "n/a" }; else { e = { ...e, domainLookupStart: t.domainLookupStart, domainLookupEnd: t.domainLookupEnd, connectStart: t.connectStart, connectEnd: t.connectEnd, connectSecureStart: t.secureConnectionStart, responseStart: t.responseStart, requestStart: t.requestStart, responseEnd: t.responseEnd, transferSize: t.encodedBodySize, encodedBodySize: t.encodedBodySize, decodedBodySize: t.decodedBodySize }; let r = D(t.nextHopProtocol); r && (e.connectProtocol = r) } a.push(e) } } else console.log("Performance API not found"); var d; a.length > 0 ? (d = { sessionTimeMs: Date.now(), triggerCode: t, measurements: a }, fetch("https://performance.radar.cloudflare.com/api/beacon", { method: "POST", referrer: "", referrerPolicy: "no-referrer", headers: { "content-type": "application/json;charset=UTF-8", Authorization: "Bearer 1674319424-3dffcd9df37f9032853846661bd7aae9c73efcda8a1fbf7b9516f7556c960475", "Access-Control-Allow-Origin": "*" }, body: JSON.stringify(d) }).then((function (e) { return e.json() })).then((function (e) { x("Data sent to Radar:"), x(d), sessionStorage.setItem("ts", String(U())), x("Thank you for helping us build a better Internet.") }))) : x("No measurements to submit.") }; function $() { B && (B.innerHTML = ""), I([{ "name": "group-cdn-01", "rate": 0.5, "prefix": "", "canFail": false, "allowMobile": false, "assets": [{ "targetName": "fastly-c", "es": 557, "url": "https://fastly.cedexis-test.com/img/20367/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }, { "targetName": "cloudfront-c", "es": 488, "url": "https://p29.cedexis-test.com/img/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }, { "targetName": "akamai-c", "es": 395, "url": "https://cedexis-test.akamaized.net/img/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }, { "targetName": "cloudflare-c", "es": 358, "url": "https://ptcfc.com/img/284/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }, { "targetName": "google", "es": 200, "url": "https://benchmark.1e100cdn.net/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }], "weight": 5 }, { "name": "group-cf-ipv4-ipv6-checks", "rate": 0.2, "prefix": "", "es": 200, "type": "coloName", "canFail": true, "allowMobile": true, "assets": [{ "targetName": "cf-ipv4-only-check", "url": "https://ipv4-check-perf.radar.cloudflare.com/api/info", "digest": "c058e642500f6cfa358c0445dce3e6e9f8a129f11a71c108f5887360aff394bf", "extra": { "connectIPVersion": 4 } }, { "targetName": "cf-ipv6-only-check", "url": "https://ipv6-check-perf.radar.cloudflare.com/api/info", "digest": "dbe3846380a3025d82cad863cc8e74fb0b7ab8928ecd40906d257108575e1fde", "extra": { "connectIPVersion": 6 } }, { "targetName": "cf-resolver-check", "url": "https://performance-radar.is-cf.help.every1dns.net/resolvertest", "digest": "6f70746bbe5a6aeeac343d9987278cb25fee98afb3cdae0300b96ac7f171a3fe" }], "weight": 3 }, { "name": "group-cdn-02", "rate": 0.2, "prefix": "", "canFail": false, "allowMobile": false, "assets": [{ "targetName": "fastly", "es": 605, "url": "https://fastly.jsdelivr.net/gh/jimaek/testobjects@0.0.1/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }, { "targetName": "akamai", "es": 391, "url": "https://essl-cdxs.edgekey.net/img/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }, { "targetName": "cloudflare", "es": 777, "url": "https://testingcf.jsdelivr.net/gh/jimaek/testobjects@0.0.1/r20-100KB.png", "digest": "27bce9e85eaf3567a4695ba2b612e32615394d80d0a3a2dcb07b1fbfdfababc7", "size": 102400 }], "weight": 3 }]) } !document.readyState || "complete" !== document.readyState && "interactive" !== document.readyState ? window.addEventListener("DOMContentLoaded", (() => { $() })) : $();